{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanh/fullstack/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Statistics = props => {\n  if (props.totalFeedback === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", props.neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), \"bad \", props.bad, \"all \", props.totalFeedback, \"average \", props.averageFeedback, \"positive \", props.pctPositiveFeedback, \" %\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const totalFeedback = good + neutral + bad;\n  const averageFeedback = (good - bad) / totalFeedback;\n  const pctPositiveFeedback = good / totalFeedback * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      totalFeedback: totalFeedback,\n      averageFeedback: averageFeedback,\n      pctPositiveFeedback: pctPositiveFeedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/jonathanh/fullstack/part1/src/App.js"],"names":["React","useState","Button","props","handleClick","text","Statistics","totalFeedback","good","neutral","bad","averageFeedback","pctPositiveFeedback","App","setGood","setNeutral","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,YACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,M;;AAMN,MAAMI,UAAU,GAAIH,KAAD,IAAW;AAC5B,MAAIA,KAAK,CAACI,aAAN,KAAwB,CAA5B,EAA+B;AAC7B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAA,4BACE;AAAA,0BAASJ,KAAK,CAACK,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAYL,KAAK,CAACM,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,UAGON,KAAK,CAACO,GAHb,UAIOP,KAAK,CAACI,aAJb,cAKWJ,KAAK,CAACQ,eALjB,eAMYR,KAAK,CAACS,mBANlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlBD;;MAAMN,U;;AAoBN,MAAMO,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACL,IAAD,EAAOM,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUM,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,GAAD,EAAMM,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AAEA,QAAMM,aAAa,GAAGC,IAAI,GAAGC,OAAP,GAAiBC,GAAvC;AACA,QAAMC,eAAe,GAAG,CAACH,IAAI,GAAGE,GAAR,IAAeH,aAAvC;AACA,QAAMK,mBAAmB,GAAIJ,IAAI,GAAGD,aAAR,GAAyB,GAArD;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMO,OAAO,CAACN,IAAI,GAAG,CAAR,CAAlC;AAA8C,MAAA,IAAI,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMO,UAAU,CAACN,OAAO,GAAG,CAAX,CAArC;AAAoD,MAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMO,MAAM,CAACN,GAAG,GAAG,CAAP,CAAjC;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAWE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,IAAlB;AAAwB,MAAA,OAAO,EAAEC,OAAjC;AAA0C,MAAA,GAAG,EAAEC,GAA/C;AAAoD,MAAA,aAAa,EAAEH,aAAnE;AAAkF,MAAA,eAAe,EAAEI,eAAnG;AAAoH,MAAA,mBAAmB,EAAEC;AAAzI;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxBD;;GAAMC,G;;MAAAA,G;AA0BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst Statistics = (props) => {\n  if (props.totalFeedback === 0) {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  }\n  return (\n    <div>\n      <p>good {props.good}</p>\n      <p>neutral {props.neutral}</p>\n      bad {props.bad}\n      all {props.totalFeedback}\n      average {props.averageFeedback}\n      positive {props.pctPositiveFeedback} %\n    </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const totalFeedback = good + neutral + bad\n  const averageFeedback = (good - bad) / totalFeedback\n  const pctPositiveFeedback = (good / totalFeedback) * 100\n\n  return (\n    <div>\n      <h2>\n        give feedback\n      </h2>\n      <Button handleClick={() => setGood(good + 1)} text='good' />\n      <Button handleClick={() => setNeutral(neutral + 1)} text='neutral' />\n      <Button handleClick={() => setBad(bad + 1)} text='bad' />\n\n      <h2>\n        statistics\n      </h2>\n      <Statistics good={good} neutral={neutral} bad={bad} totalFeedback={totalFeedback} averageFeedback={averageFeedback} pctPositiveFeedback={pctPositiveFeedback} />\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}