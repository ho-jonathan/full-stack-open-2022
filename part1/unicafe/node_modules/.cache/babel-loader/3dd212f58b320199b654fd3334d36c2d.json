{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanh/fullstack/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst FeedbackCount = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.text, \" \", props.val]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = FeedbackCount;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => incGoodFeedback(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => incNeutralFeedback(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => incBadFeedback(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackCount, {\n      text: \"good\",\n      val: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackCount, {\n      text: \"neutral\",\n      val: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackCount, {\n      text: \"bad\",\n      val: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"FeedbackCount\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/jonathanh/fullstack/part1/src/App.js"],"names":["React","useState","Button","props","handleClick","text","FeedbackCount","val","App","good","setGood","neutral","setNeutral","bad","setBad","incGoodFeedback","incNeutralFeedback","incBadFeedback"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,iBACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,WAAvB;AAAA,YACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,M;;AAMN,MAAMI,aAAa,GAAIH,KAAD,IAAW;AAC/B,sBACE;AAAA,eACGA,KAAK,CAACE,IADT,OACgBF,KAAK,CAACI,GADtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMD,a;;AAQN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMc,eAAe,CAACN,IAAI,GAAG,CAAR,CAA1C;AAAsD,MAAA,IAAI,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMO,kBAAkB,CAACL,OAAO,GAAG,CAAX,CAA7C;AAA4D,MAAA,IAAI,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMM,cAAc,CAACJ,GAAG,GAAG,CAAP,CAAzC;AAAoD,MAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAWE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,GAAG,EAAEJ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,GAAG,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC,KAApB;AAA0B,MAAA,GAAG,EAAEE;AAA/B;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtBD;;GAAML,G;;MAAAA,G;AAwBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst FeedbackCount = (props) => {\n  return (\n    <div>\n      {props.text} {props.val}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <p>\n        give feedback\n      </p>\n      <Button handleClick={() => incGoodFeedback(good + 1)} text='good' />\n      <Button handleClick={() => incNeutralFeedback(neutral + 1)} text='neutral' />\n      <Button handleClick={() => incBadFeedback(bad + 1)} text='bad' />\n\n      <p>\n        statistics\n      </p>\n      <FeedbackCount text='good' val={good} />\n      <FeedbackCount text='neutral' val={neutral} />\n      <FeedbackCount text='bad' val={bad} />      \n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}